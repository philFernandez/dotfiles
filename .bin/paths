#!/bin/zsh


# #############################################################################################################
# #############################################################################################################
# #############################################################################################################
# This is where the colors and powerline symbols can be adjusted (nothing else needs to be touched)
# Use
# 2;r;g;b
# Or
# 5;n
pathBGColor='5;233'
pathFGColor='5;3'
pathULColor='5;196'

fpathBGColor='5;202'
fpathFGColor='5;50'
fpathULColor='5;118'

# These are the powerline symbols for the banners
leftSymbol='\Ue0b2'
rightSymbol='\Ue0b0'
# #############################################################################################################
# #############################################################################################################
# #############################################################################################################


# Clear the current ansi sequence
cc() {
    printf -- '\033[0m'
}

# These are just the ansi sequences for telling if we're doing background, foreground, underline, etc.
ansiBG() {
    printf -- '\033[48;'
}

ansiFG() {
    printf -- '\033[1;38;'
}

ansiUL() {
    printf -- '\033[4;'
}

# These are the actual ansi colors.
pathBG() {
    printf -- "${pathBGColor}m"
}

pathFG() {
    printf -- "${pathFGColor}m"
}

pathUL() {
    printf -- "58;${pathULColor}m"
}

fpathFG() {
    printf -- "${fpathFGColor}m"
}

fpathBG() {
    printf -- "${fpathBGColor}m"
}

fpathUL() {
    printf -- "58;${fpathULColor}m"
}

# Must have an ansi## followed by a (f)path##Color
# Compose above ansi sequence segments into cohesive parts to be displayed.
pathBannerLeft() {
    ansiFG
    pathBG
    printf -- "$leftSymbol"
    cc
}
pathBannerBody() {
    ansiBG
    pathBG
    ansiFG
    pathFG
    ansiUL
    pathUL
    printf -- '<-::Exported $PATH::->'
    cc
}
pathBannerRight() {
    ansiFG
    pathBG
    echo "$rightSymbol"
    cc
}
pathList() {
    ansiFG
    pathFG
    print -l ${(s|:|)PATH}
    cc
}
fpathBannerLeft() {
    ansiFG
    fpathBG
    printf -- "$leftSymbol"
    cc
}
fpathBannerBody() {
    ansiBG
    fpathBG
    ansiFG
    fpathFG
    ansiUL
    fpathUL
    printf -- '<-::Exported $FPATH::->'
    cc
}
fpathBannerRight() {
    ansiFG
    fpathBG
    echo "$rightSymbol"
    cc
}
fpathList() {
    ansiFG
    fpathFG
    print -l ${(s|:|)FPATH}
    cc
}


# This part calls the composed section functions for displaying
pathBannerLeft
pathBannerBody
pathBannerRight
pathList

echo

fpathBannerLeft
fpathBannerBody
fpathBannerRight
fpathList


